{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/home/rthyd-lap-257/Desktop/ReactProjects/AdminDashboardFullwesite/client/src/components/BarCharts/index.js\";\nimport { Box } from \"@mui/system\";\nimport React from \"react\";\nimport { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, ResponsiveContainer } from \"recharts\";\nvar colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\", \"red\", \"pink\"];\nvar data = [{\n  name: \"Page A\",\n  uv: 4000,\n  pv: 2400,\n  amt: 2400\n}, {\n  name: \"Page B\",\n  uv: 3000,\n  pv: 1398,\n  amt: 2210\n}, {\n  name: \"Page C\",\n  uv: 2000,\n  pv: 9800,\n  amt: 2290\n}, {\n  name: \"Page D\",\n  uv: 2780,\n  pv: 3908,\n  amt: 2000\n}, {\n  name: \"Page E\",\n  uv: 1890,\n  pv: 4800,\n  amt: 2181\n}, {\n  name: \"Page F\",\n  uv: 2390,\n  pv: 3800,\n  amt: 2500\n}, {\n  name: \"Page G\",\n  uv: 3490,\n  pv: 4300,\n  amt: 2100\n}];\nvar getPath = function getPath(x, y, width, height) {\n  return \"M\".concat(x, \",\").concat(y + height, \"C\").concat(x + width / 3, \",\").concat(y + height, \" \").concat(x + width / 2, \",\").concat(y + height / 3, \"\\n  \").concat(x + width / 2, \", \").concat(y, \"\\n  C\").concat(x + width / 2, \",\").concat(y + height / 3, \" \").concat(x + 2 * width / 3, \",\").concat(y + height, \" \").concat(x + width, \", \").concat(y + height, \"\\n  Z\");\n};\nvar TriangleBar = function TriangleBar(props) {\n  var fill = props.fill,\n    x = props.x,\n    y = props.y,\n    width = props.width,\n    height = props.height;\n  return /*#__PURE__*/React.createElement(\"path\", {\n    d: getPath(x, y, width, height),\n    stroke: \"none\",\n    fill: fill,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 10\n    }\n  });\n};\nvar BarCharts = function BarCharts() {\n  return /*#__PURE__*/React.createElement(Box, {\n    width: 500,\n    height: 300,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    width: 500,\n    height: 300,\n    data: data,\n    margin: {\n      top: 20,\n      right: 30,\n      left: 20,\n      bottom: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"uv\",\n    fill: \"#8884d8\",\n    shape: /*#__PURE__*/React.createElement(TriangleBar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 18\n      }\n    }),\n    label: {\n      position: \"top\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, data.map(function (entry, index) {\n    return /*#__PURE__*/React.createElement(Cell, {\n      key: \"cell-\".concat(index),\n      fill: colors[index % 20],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    });\n  }))));\n};\nexport default BarCharts;","map":{"version":3,"names":["Box","React","BarChart","Bar","Cell","XAxis","YAxis","CartesianGrid","ResponsiveContainer","colors","data","name","uv","pv","amt","getPath","x","y","width","height","concat","TriangleBar","props","fill","createElement","d","stroke","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","BarCharts","margin","top","right","left","bottom","strokeDasharray","dataKey","shape","label","position","map","entry","index","key"],"sources":["/home/rthyd-lap-257/Desktop/ReactProjects/AdminDashboardFullwesite/client/src/components/BarCharts/index.js"],"sourcesContent":["import { Box } from \"@mui/system\";\nimport React from \"react\";\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\", \"red\", \"pink\"];\n\nconst data = [\n  {\n    name: \"Page A\",\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nconst getPath = (x, y, width, height) => {\n  return `M${x},${y + height}C${x + width / 3},${y + height} ${x +\n    width / 2},${y + height / 3}\n  ${x + width / 2}, ${y}\n  C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${y + height} ${x +\n    width}, ${y + height}\n  Z`;\n};\n\nconst TriangleBar = (props) => {\n  const { fill, x, y, width, height } = props;\n\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\n};\n\nconst BarCharts = () => {\n  return (\n    <Box width={500} height={300}>\n      <BarChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Bar\n          dataKey=\"uv\"\n          fill=\"#8884d8\"\n          shape={<TriangleBar />}\n          label={{ position: \"top\" }}\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={colors[index % 20]} />\n          ))}\n        </Bar>\n      </BarChart>\n    </Box>\n  );\n};\n\nexport default BarCharts;\n"],"mappings":";;AAAA,SAASA,GAAG,QAAQ,aAAa;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,SACEC,QAAQ,EACRC,GAAG,EACHC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,mBAAmB,QACd,UAAU;AAEjB,IAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC;AAE1E,IAAMC,IAAI,GAAG,CACX;EACEC,IAAI,EAAE,QAAQ;EACdC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,GAAG,EAAE;AACP,CAAC,EACD;EACEH,IAAI,EAAE,QAAQ;EACdC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,GAAG,EAAE;AACP,CAAC,EACD;EACEH,IAAI,EAAE,QAAQ;EACdC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,GAAG,EAAE;AACP,CAAC,EACD;EACEH,IAAI,EAAE,QAAQ;EACdC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,GAAG,EAAE;AACP,CAAC,EACD;EACEH,IAAI,EAAE,QAAQ;EACdC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,GAAG,EAAE;AACP,CAAC,EACD;EACEH,IAAI,EAAE,QAAQ;EACdC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,GAAG,EAAE;AACP,CAAC,EACD;EACEH,IAAI,EAAE,QAAQ;EACdC,EAAE,EAAE,IAAI;EACRC,EAAE,EAAE,IAAI;EACRC,GAAG,EAAE;AACP,CAAC,CACF;AAED,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAIC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,MAAM,EAAK;EACvC,WAAAC,MAAA,CAAWJ,CAAC,OAAAI,MAAA,CAAIH,CAAC,GAAGE,MAAM,OAAAC,MAAA,CAAIJ,CAAC,GAAGE,KAAK,GAAG,CAAC,OAAAE,MAAA,CAAIH,CAAC,GAAGE,MAAM,OAAAC,MAAA,CAAIJ,CAAC,GAC5DE,KAAK,GAAG,CAAC,OAAAE,MAAA,CAAIH,CAAC,GAAGE,MAAM,GAAG,CAAC,UAAAC,MAAA,CAC3BJ,CAAC,GAAGE,KAAK,GAAG,CAAC,QAAAE,MAAA,CAAKH,CAAC,WAAAG,MAAA,CAClBJ,CAAC,GAAGE,KAAK,GAAG,CAAC,OAAAE,MAAA,CAAIH,CAAC,GAAGE,MAAM,GAAG,CAAC,OAAAC,MAAA,CAAIJ,CAAC,GAAI,CAAC,GAAGE,KAAK,GAAI,CAAC,OAAAE,MAAA,CAAIH,CAAC,GAAGE,MAAM,OAAAC,MAAA,CAAIJ,CAAC,GAC1EE,KAAK,QAAAE,MAAA,CAAKH,CAAC,GAAGE,MAAM;AAExB,CAAC;AAED,IAAME,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAAK;EAAA,IACrBC,IAAI,GAA0BD,KAAK,CAAnCC,IAAI;IAAEP,CAAC,GAAuBM,KAAK,CAA7BN,CAAC;IAAEC,CAAC,GAAoBK,KAAK,CAA1BL,CAAC;IAAEC,KAAK,GAAaI,KAAK,CAAvBJ,KAAK;IAAEC,MAAM,GAAKG,KAAK,CAAhBH,MAAM;EAEjC,oBAAOlB,KAAA,CAAAuB,aAAA;IAAMC,CAAC,EAAEV,OAAO,CAACC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAEC,MAAM,CAAE;IAACO,MAAM,EAAC,MAAM;IAACH,IAAI,EAAEA,IAAK;IAAAI,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG;AAC5E,CAAC;AAED,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACtB,oBACEjC,KAAA,CAAAuB,aAAA,CAACxB,GAAG;IAACkB,KAAK,EAAE,GAAI;IAACC,MAAM,EAAE,GAAI;IAAAQ,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3BhC,KAAA,CAAAuB,aAAA,CAACtB,QAAQ;IACPgB,KAAK,EAAE,GAAI;IACXC,MAAM,EAAE,GAAI;IACZT,IAAI,EAAEA,IAAK;IACXyB,MAAM,EAAE;MACNC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,MAAM,EAAE;IACV,CAAE;IAAAZ,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEFhC,KAAA,CAAAuB,aAAA,CAACjB,aAAa;IAACiC,eAAe,EAAC,KAAK;IAAAb,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACvChC,KAAA,CAAAuB,aAAA,CAACnB,KAAK;IAACoC,OAAO,EAAC,MAAM;IAAAd,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACxBhC,KAAA,CAAAuB,aAAA,CAAClB,KAAK;IAAAqB,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACThC,KAAA,CAAAuB,aAAA,CAACrB,GAAG;IACFsC,OAAO,EAAC,IAAI;IACZlB,IAAI,EAAC,SAAS;IACdmB,KAAK,eAAEzC,KAAA,CAAAuB,aAAA,CAACH,WAAW;MAAAM,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAI;IACvBU,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAM,CAAE;IAAAjB,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAE1BvB,IAAI,CAACmC,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;IAAA,oBACrB9C,KAAA,CAAAuB,aAAA,CAACpB,IAAI;MAAC4C,GAAG,UAAA5B,MAAA,CAAU2B,KAAK,CAAG;MAACxB,IAAI,EAAEd,MAAM,CAACsC,KAAK,GAAG,EAAE,CAAE;MAAApB,MAAA,EAAAC,KAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EAAG;EAAA,CACzD,CAAC,CACE,CACG,CACP;AAEV,CAAC;AAED,eAAeC,SAAS"},"metadata":{},"sourceType":"module"}
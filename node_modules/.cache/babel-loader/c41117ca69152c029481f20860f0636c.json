{"ast":null,"code":"import _slicedToArray from \"/home/rthyd-lap-257/Desktop/ReactProjects/AdminDashboardFullwesite/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/home/rthyd-lap-257/Desktop/ReactProjects/AdminDashboardFullwesite/client/src/components/AdminProtectedRoute/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\nvar UserProtectedRoute = function UserProtectedRoute(props) {\n  var role = Cookies.get(\"role\");\n  console.log(role);\n  var navigate = useNavigate();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoggedIn = _useState2[0],\n    setIsLoggedIn = _useState2[1];\n  var checkUserToken = function checkUserToken() {\n    var accessToken = Cookies.get(\"jwtToken\");\n\n    // console.log(\"hello\", accessToken);\n    if (!accessToken || accessToken === !undefined) {\n      setIsLoggedIn(false);\n      navigate(\"/login\");\n    } else {\n      setIsLoggedIn(true);\n    }\n    if (isLoggedIn && role === \"admin\") {\n      navigate(\"/\", {\n        replace: true\n      });\n    }\n  };\n  useEffect(function () {\n    checkUserToken();\n  }, [isLoggedIn]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  }, isLoggedIn ? props.children : null);\n};\nexport default UserProtectedRoute;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","Cookies","UserProtectedRoute","props","role","get","console","log","navigate","_useState","_useState2","_slicedToArray","isLoggedIn","setIsLoggedIn","checkUserToken","accessToken","undefined","replace","createElement","Fragment","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","children"],"sources":["/home/rthyd-lap-257/Desktop/ReactProjects/AdminDashboardFullwesite/client/src/components/AdminProtectedRoute/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Cookies from \"js-cookie\";\n\nconst UserProtectedRoute = (props) => {\n  const role = Cookies.get(\"role\");\n  console.log(role);\n\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const checkUserToken = () => {\n    const accessToken = Cookies.get(\"jwtToken\");\n\n    // console.log(\"hello\", accessToken);\n    if (!accessToken || accessToken === !undefined) {\n      setIsLoggedIn(false);\n      navigate(\"/login\");\n    } else {\n      setIsLoggedIn(true);\n    }\n\n    if (isLoggedIn && role === \"admin\") {\n      navigate(\"/\", { replace: true });\n    }\n  };\n\n  useEffect(() => {\n    checkUserToken();\n  }, [isLoggedIn]);\n  return <React.Fragment>{isLoggedIn ? props.children : null}</React.Fragment>;\n};\nexport default UserProtectedRoute;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,WAAW;AAE/B,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIC,KAAK,EAAK;EACpC,IAAMC,IAAI,GAAGH,OAAO,CAACI,GAAG,CAAC,MAAM,CAAC;EAChCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EAEjB,IAAMI,QAAQ,GAAGR,WAAW,EAAE;EAAC,IAAAS,SAAA,GACKV,QAAQ,CAAC,KAAK,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA5CG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAEhC,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;IAC3B,IAAMC,WAAW,GAAGd,OAAO,CAACI,GAAG,CAAC,UAAU,CAAC;;IAE3C;IACA,IAAI,CAACU,WAAW,IAAIA,WAAW,KAAK,CAACC,SAAS,EAAE;MAC9CH,aAAa,CAAC,KAAK,CAAC;MACpBL,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAM;MACLK,aAAa,CAAC,IAAI,CAAC;IACrB;IAEA,IAAID,UAAU,IAAIR,IAAI,KAAK,OAAO,EAAE;MAClCI,QAAQ,CAAC,GAAG,EAAE;QAAES,OAAO,EAAE;MAAK,CAAC,CAAC;IAClC;EACF,CAAC;EAEDnB,SAAS,CAAC,YAAM;IACdgB,cAAc,EAAE;EAClB,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;EAChB,oBAAOf,KAAA,CAAAqB,aAAA,CAACrB,KAAK,CAACsB,QAAQ;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEd,UAAU,GAAGT,KAAK,CAACwB,QAAQ,GAAG,IAAI,CAAkB;AAC9E,CAAC;AACD,eAAezB,kBAAkB"},"metadata":{},"sourceType":"module"}